- name: Add stable chart repo
  when: "'server_node' in group_names"
  kubernetes.core.helm_repository:
    name: rancher-{{ CHART_REPO }}
    repo_url: "https://releases.rancher.com/server-charts/{{ CHART_REPO }}"

 #- name: Create a k8s namespace for rancher
 #  when: "'server_node' in group_names"
 #  kubernetes.core.k8s:
 #    name: cattle-system
 #    api_version: v1
 #    kind: Namespace
 #    state: present
 
- name: download Custom Resource Definitions (CRDs)
  when: "'server_node' in group_names" 
  get_url: 
    url: https://github.com/jetstack/cert-manager/releases/download/v1.5.1/cert-manager.crds.yaml
    dest: /tmp/cert-manager.crds.yaml

- name: Deployment of CRDs by reading the definition from the local file
  when: "'server_node' in group_names"
  kubernetes.core.k8s:
    state: present
    src: /tmp/cert-manager.crds.yaml
 
 - name: Add the Jetstack Helm repository
   when: "'server_node' in group_names"
   kubernetes.core.helm_repository:
     name: jetstack
     repo_url: "https://charts.jetstack.io"
 
 - name: Update Helm Repo
   when: "'server_node' in group_names"
   command: " helm repo update "
 
 - name: Install cert-manager Helm chart
   when: "'server_node' in group_names"
   kubernetes.core.helm:
     name: cert-manager
     chart_repo: jetstack/cert-manager
     version: v1.11.0
     state: present
     namespace: cert-manager
     create_namespace: yes
 
 - name: verify if the cert-manager pods are all running
   when: "'server_node' in group_names"
   command: " kubectl get pods --namespace cert-manager "
   register: CertManager 
 
 - name: printing the pods status
   when: "'server_node' in group_names"
   debug:
     var: CertManager.stdout
  
 - name: Deploy Rancher using  generated self-signed certificates through Cert-Manager
   when: "'server_node' in group_names" 
   kubernetes.core.helm:
     name: rancher
     chart_repo: rancher-{{ CHART_REPO }}/rancher
     state: present
     namespace: cattle-system
     create_namespace: yes 
     set_values:
       - value: hostname={{ LB-domain-name }}
         value_type: string
       - value: bootstrapPassword=admin
         value_type: string
 
 - name: verify if the rancher server is deployed
   when: "'server_node' in group_names"
   command: " kubectl -n cattle-system rollout status deploy/rancher  "
   register: Rancher
 
 - name: printing the deployement result
   when: "'server_node' in group_names"
   debug:
     var: Rancher.stdout
